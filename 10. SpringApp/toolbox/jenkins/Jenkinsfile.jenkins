#!groovy
//  groovy Jenkinsfile
properties([disableConcurrentBuilds()])

pipeline  {
    agent {
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("Create docker image") {
            steps {
                echo 'Creating docker image ...'
                dir('.'){
                    //sh "docker build -t macnaer/chatterboxserver . "
                    echo "First step works..."
                }
            }
        }
      //  stage("docker login") {
        //    steps {
        //        echo " ============== docker login =================="
        //        withCredentials([usernamePassword(credentialsId: 'DockerHub-Credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        //            sh '''
       //             docker login -u $USERNAME -p $PASSWORD
       //             '''
       //         }
       //     }
       // }
       // stage("docker push") {
      //      steps {
       //         echo " ============== pushing image =================="
       //         sh '''
       //         docker push macnaer/chatterboxserver:latest
      //          '''
       //     }
       // }
      //  stage("docker stop") {
       //     steps {
       //         echo " ============== stoping all images =================="
      //          sh '''
      //          docker stop chatterboxserver
      //          '''
      //      }
      //  }
      //  stage("docker remove") {
      //      steps {
      //          echo " ============== removing all docker containers =================="
       //         sh '''
       //         docker rm chatterboxserver
       //         '''
        //    }
       // }
      //  stage("docker run") {
      //      steps {
       //         echo " ============== starting chatterbox server =================="
       //         sh '''
        //        docker run -d --restart=always --name chatterboxserver -p 3200:3200 macnaer/chatterboxserver
        //        '''
        //    }
        //}
        // stage("Deploy to stage server") {
        //     steps {
        //         echo " ============== Running playbook =================="
        //         sh '''
        //         ansible-playbook toolbox/ansible/playbooks/demloyToStageServer.yml
        //         '''
        //     }
        //}

    }
}